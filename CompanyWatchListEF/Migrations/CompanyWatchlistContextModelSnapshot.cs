// <auto-generated />
using CompanyWatchListEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace CompanyWatchListCore.Migrations
{
    [DbContext(typeof(CompanyWatchlistContext))]
    partial class CompanyWatchlistContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("CompanyWatchList.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "f3710b8f-c339-422c-92dc-4f5e89a0ff5e",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "87c3241d-1b52-4808-b8ae-f5f643c891e3",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("CompanyWatchList.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Eugen",
                            LastName = "Stancioiu",
                            PasswordHash = new byte[] { 93, 142, 79, 186, 99, 103, 216, 102, 72, 61, 61, 170, 188, 12, 106, 230, 30, 150, 146, 42, 14, 54, 146, 250, 222, 209, 86, 13, 171, 31, 17, 98, 237, 215, 12, 174, 104, 51, 153, 117, 200, 157, 191, 79, 199, 52, 169, 131, 210, 188, 135, 85, 198, 140, 138, 74, 166, 49, 95, 13, 240, 117, 238, 74 },
                            PasswordSalt = new byte[] { 31, 107, 116, 29, 65, 183, 227, 96, 112, 170, 69, 112, 217, 55, 56, 10, 95, 5, 26, 159, 194, 109, 110, 8, 71, 63, 217, 196, 200, 255, 81, 35, 133, 107, 143, 232, 21, 5, 18, 171, 78, 180, 107, 186, 227, 84, 62, 244, 239, 214, 68, 7, 94, 64, 184, 245, 242, 22, 72, 123, 128, 49, 64, 68, 105, 92, 16, 72, 222, 39, 239, 71, 132, 229, 99, 18, 168, 65, 131, 42, 123, 145, 120, 83, 138, 8, 130, 15, 159, 15, 175, 121, 203, 99, 203, 100, 221, 143, 222, 209, 66, 83, 130, 72, 170, 138, 30, 199, 37, 35, 46, 241, 84, 122, 148, 183, 89, 12, 193, 232, 146, 249, 2, 225, 245, 250, 105, 159 },
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CompanyWatchList.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("CompanyWatchList.Entities.UserRole", b =>
                {
                    b.HasOne("CompanyWatchList.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyWatchList.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
