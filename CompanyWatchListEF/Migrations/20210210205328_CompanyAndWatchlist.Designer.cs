// <auto-generated />
using System;
using CompanyWatchListEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyWatchListCore.Migrations
{
    [DbContext(typeof(CompanyWatchlistContext))]
    [Migration("20210210205328_CompanyAndWatchlist")]
    partial class CompanyAndWatchlist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("CompanyWatchListEF.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "7b8da9a4-e331-4a03-8cc0-a2a301b8bdb3",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "741cc9fa-a919-43a0-9180-fb6290ffaf69",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("CompanyWatchListEF.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Eugen",
                            LastName = "Stancioiu",
                            PasswordHash = new byte[] { 135, 135, 56, 235, 103, 9, 84, 205, 234, 201, 180, 49, 3, 3, 249, 117, 137, 26, 59, 38, 152, 87, 52, 232, 207, 109, 94, 241, 126, 95, 206, 17, 100, 254, 30, 138, 219, 196, 53, 207, 50, 135, 79, 31, 79, 115, 1, 138, 55, 102, 51, 10, 170, 176, 108, 49, 40, 66, 157, 42, 112, 202, 10, 166 },
                            PasswordSalt = new byte[] { 126, 112, 64, 153, 138, 152, 222, 196, 111, 253, 2, 71, 222, 179, 208, 253, 105, 113, 63, 205, 69, 96, 81, 63, 15, 137, 204, 65, 205, 115, 109, 251, 239, 253, 7, 190, 181, 234, 86, 126, 169, 111, 92, 22, 249, 135, 120, 121, 152, 112, 31, 224, 81, 85, 219, 15, 255, 59, 43, 139, 139, 71, 82, 84, 127, 254, 178, 236, 240, 18, 189, 174, 162, 130, 236, 29, 103, 229, 100, 22, 52, 88, 149, 201, 23, 100, 73, 162, 59, 230, 245, 126, 95, 89, 162, 100, 125, 154, 2, 241, 211, 130, 203, 235, 196, 135, 183, 36, 44, 15, 31, 164, 7, 132, 254, 57, 129, 247, 38, 141, 32, 151, 201, 223, 119, 4, 137, 53 },
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CompanyWatchListEF.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("CompanyWatchListEF.Entities.UserRole", b =>
                {
                    b.HasOne("CompanyWatchListEF.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyWatchListEF.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
