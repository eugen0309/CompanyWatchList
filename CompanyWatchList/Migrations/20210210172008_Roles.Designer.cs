// <auto-generated />
using System;
using CompanyWatchList.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyWatchList.Migrations
{
    [DbContext(typeof(CompanyWatchlistContext))]
    [Migration("20210210172008_Roles")]
    partial class Roles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("CompanyWatchList.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "0d5901eb-094c-4e91-877f-94f1f7b58943",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "9ef50e8c-7f66-46fb-8774-bae185f7bf30",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("CompanyWatchList.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Eugen",
                            LastName = "Stancioiu",
                            PasswordHash = new byte[] { 97, 152, 170, 109, 61, 255, 202, 252, 25, 73, 247, 74, 254, 213, 212, 190, 37, 136, 30, 35, 103, 225, 27, 135, 0, 91, 40, 103, 39, 195, 105, 243, 88, 44, 246, 149, 17, 239, 84, 80, 231, 229, 6, 14, 192, 251, 164, 109, 228, 186, 147, 36, 86, 115, 72, 133, 237, 22, 14, 142, 92, 96, 176, 111 },
                            PasswordSalt = new byte[] { 194, 24, 115, 126, 1, 157, 168, 80, 116, 131, 94, 214, 119, 214, 130, 160, 210, 232, 140, 62, 241, 62, 47, 82, 75, 37, 120, 84, 251, 43, 44, 39, 128, 166, 85, 171, 48, 2, 171, 114, 237, 233, 174, 33, 194, 231, 168, 3, 189, 105, 106, 204, 158, 179, 202, 83, 230, 248, 211, 105, 21, 187, 35, 30, 16, 219, 80, 10, 117, 86, 51, 163, 187, 171, 18, 109, 167, 218, 119, 210, 42, 208, 67, 204, 19, 61, 19, 122, 91, 133, 230, 78, 181, 176, 63, 114, 36, 125, 219, 0, 246, 138, 70, 68, 86, 53, 114, 238, 254, 153, 133, 145, 88, 209, 149, 234, 175, 30, 166, 146, 69, 202, 118, 236, 225, 106, 180, 123 },
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CompanyWatchList.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CompanyWatchList.Entities.UserRole", b =>
                {
                    b.HasOne("CompanyWatchList.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyWatchList.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
